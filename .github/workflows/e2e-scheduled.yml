name: e2e-scheduled

on:
  schedule:
    - cron: "*/15 * * * *"   # her 15 dk (UTC)
  workflow_dispatch: {}

jobs:
  e2e:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with: { node-version: 20, cache: 'npm' }

      - name: Cache Cypress binary
        uses: actions/cache@v4
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

      - name: Install deps
        run: npm ci

      - name: Verify Cypress
        run: npx cypress verify

      - name: Prepare artifact dirs
        run: mkdir -p cypress/screenshots cypress/videos reports

      - name: Start app (background) and wait for health
        run: |
          node server.js &
          for i in {1..60}; do
            curl -sf http://127.0.0.1:3000/health && break
            sleep 1
          done
          curl -sf http://127.0.0.1:3000/env || true

      - name: Run Cypress (headless)
        id: run
        env:
          CY_BASE_URL: http://127.0.0.1:3000
          CY_WEBHOOK_BASE: http://127.0.0.1:3000
        shell: bash
        run: |
          set +e
          npx cypress run --reporter junit --reporter-options "mochaFile=reports/junit/results-[hash].xml"
          STATUS=$?
          echo "status=$STATUS" >> $GITHUB_OUTPUT
          exit 0

      - name: Upload artifacts (videos/screenshots/reports)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-artifacts
          path: |
            cypress/screenshots
            cypress/videos
            reports

      - name: Notify Google Chat on failure
        if: steps.run.outputs.status != '0'
        env:
          CHAT_WEBHOOK: ${{ secrets.GOOGLE_CHAT_WEBHOOK_URL }}
          RUN_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        run: |
          curl -s -X POST -H "Content-Type: application/json" \
            -d "{\"text\":\"ðŸš¨ *Cypress scheduled run FAILED*\nRepo: ${{ github.repository }}\nBranch: ${{ github.ref_name }}\nRun: ${RUN_URL}\"}" \
            "$CHAT_WEBHOOK"
